[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Website Settings",
  "enabled": 0,
  "modified": "2022-02-13 10:07:25.017776",
  "name": "Website Settings-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Website Settings', {\n\trefresh(frm) {\n\t\tfrappe.get_conf().get(\u2018lang\u2019)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Offer",
  "enabled": 1,
  "modified": "2022-05-31 08:45:44.150160",
  "name": "Job Offer-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Salary Details', {\n   amount:function(frm, cdt, cdn){\n   var d = locals[cdt][cdn];\n   var total = 0;\n   frm.doc.salary.forEach(function(d) { total += d.amount; });\n   frm.set_value(\"total_salary\", total);\n   refresh_field(\"total_salary\");\n },\n   salary_remove:function(frm, cdt, cdn){\n   var d = locals[cdt][cdn];\n   var total = 0;\n   frm.doc.salary.forEach(function(d) { total += d.amount; });\n   frm.set_value(\"total_salary\", total);\n   refresh_field(\"total_salary\");\n   \t}\n   });",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2022-10-07 15:49:31.107274",
  "name": "Sales Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Sales Invoice\", {\n\n  setup: function (frm) {\n    frm.set_query(\"uom\", \"items\", function (doc, cdt, cdn) {\n      let row = locals[cdt][cdn];\n      return {\n        query:\n          \"erpnext.accounts.doctype.pricing_rule.pricing_rule.get_item_uoms\",\n        filters: {\n          value: row.item_code,\n          apply_on: \"Item Code\",\n        },\n      };\n    });\n  },\n  \n  before_save: function(frm) {\n    let all_charges = frm.doc.taxes ;\n  \n    let tax_categories = []\n    $.each(all_charges, function(_i, e){\n        tax_categories.push(e.charge_type)\n    })\n    \n    let added_charges = frm.doc.total_additional_sales_charges\n    \n    if(added_charges > 0){\n        if(!tax_categories.includes(\"Actual\")){\n            let entry = frm.add_child(\"taxes\");\n            entry.charge_type = 'Actual';\n            entry.account_head = cur_frm.doc.additional_charges[0].account;\n            entry.description = 'Additional Sales Charges';\n            entry.tax_amount = added_charges;\n        }\n        refresh_field(\"taxes\");\n    }\n  }\n \n});\n\n\nlet total_charges = 0\n\nfrappe.ui.form.on('Sales Charges Details', { \n    amount: function(frm,cdt,cdn) {\n       let charges = locals[cdt][cdn];\n       total_charges = total_charges + charges.amount\n       frm.set_value('total_additional_sales_charges', total_charges)\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2022-07-16 20:58:32.170468",
  "name": "Sales Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Sales Order\", {\n\n  setup: function (frm) {\n\n    frm.set_query(\"uom\", \"items\", function (doc, cdt, cdn) {\n\n      let row = locals[cdt][cdn];\n\n      return {\n\n        query:\n\n          \"erpnext.accounts.doctype.pricing_rule.pricing_rule.get_item_uoms\",\n\n        filters: {\n\n          value: row.item_code,\n\n          apply_on: \"Item Code\",\n\n        },\n\n      };\n\n    });\n\n  },\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Notification",
  "enabled": 0,
  "modified": "2022-07-20 10:18:58.360455",
  "name": "Notification-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Notification', {\n\trefresh(frm) {\n\t\tfrm.add_fetch('sender', 'email_id', 'sender_email');\n\nfrm.fields_dict.sender.get_query = function() {\n\treturn {\n\t\tfilters: {\n\t\t\tenable_outgoing: 1\n\t\t}\n\t};\n};\n\nfrappe.notification = {\n\tsetup_fieldname_select: function(frm) {\n\t\t// get the doctype to update fields\n\t\tif (!frm.doc.document_type) {\n\t\t\treturn;\n\t\t}\n\n\t\tfrappe.model.with_doctype(frm.doc.document_type, function() {\n\t\t\tlet get_select_options = function(df, parent_field) {\n\t\t\t\t// Append parent_field name along with fieldname for child table fields\n\t\t\t\tlet select_value = parent_field ? df.fieldname + ',' + parent_field : df.fieldname;\n\n\t\t\t\treturn {\n\t\t\t\t\tvalue: select_value,\n\t\t\t\t\tlabel: df.fieldname + ' (' + __(df.label) + ')'\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tlet get_date_change_options = function() {\n\t\t\t\tlet date_options = $.map(fields, function(d) {\n\t\t\t\t\treturn d.fieldtype == 'Date' || d.fieldtype == 'Datetime'\n\t\t\t\t\t\t? get_select_options(d)\n\t\t\t\t\t\t: null;\n\t\t\t\t});\n\t\t\t\t// append creation and modified date to Date Change field\n\t\t\t\treturn date_options.concat([\n\t\t\t\t\t{ value: 'creation', label: `creation (${__('Created On')})` },\n\t\t\t\t\t{ value: 'modified', label: `modified (${__('Last Modified Date')})` }\n\t\t\t\t]);\n\t\t\t};\n\n\t\t\tlet fields = frappe.get_doc('DocType', frm.doc.document_type).fields;\n\t\t\tlet options = $.map(fields, function(d) {\n\t\t\t\treturn in_list(frappe.model.no_value_type, d.fieldtype)\n\t\t\t\t\t? null : get_select_options(d);\n\t\t\t});\n\n\t\t\t// set value changed options\n\t\t\tfrm.set_df_property('value_changed', 'options', [''].concat(options));\n\t\t\tfrm.set_df_property(\n\t\t\t\t'set_property_after_alert',\n\t\t\t\t'options',\n\t\t\t\t[''].concat(options)\n\t\t\t);\n\n\t\t\t// set date changed options\n\t\t\tfrm.set_df_property('date_changed', 'options', get_date_change_options());\n\n\t\t\tlet receiver_fields = [];\n\t\t\tif (frm.doc.channel === 'Email') {\n\t\t\t\treceiver_fields = $.map(fields, function(d) {\n\n\t\t\t\t\t// Add User and Email fields from child into select dropdown\n\t\t\t\t\tif (d.fieldtype == 'Table') {\n\t\t\t\t\t\tlet child_fields = frappe.get_doc('DocType', d.options).fields;\n\t\t\t\t\t\treturn $.map(child_fields, function(df) {\n\t\t\t\t\t\t\treturn df.options == 'Email' ||\n\t\t\t\t\t\t\t\t(df.options == 'User' && df.fieldtype == 'Link')\n\t\t\t\t\t\t\t\t? get_select_options(df, d.fieldname) : null;\n\t\t\t\t\t\t});\n\t\t\t\t\t// Add User and Email fields from parent into select dropdown\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn d.options == 'Email' ||\n\t\t\t\t\t\t\t(d.options == 'User' && d.fieldtype == 'Link')\n\t\t\t\t\t\t\t? get_select_options(d) : null;\n\t\t\t\t\t}\n\t\t\t\t}); \n\t\t\t}\n\t\t\t\n\t\t\telse if (in_list(['WhatsApp', 'SMS'], frm.doc.channel)){\n\t\t\t\treceiver_fields = $.map(fields, function(d) {\n\n\t\t\t\t\t// Add User and Email fields from child into select dropdown\n\t\t\t\t\tif (d.fieldtype == 'Table') {\n\t\t\t\t\t\tlet child_fields = frappe.get_doc('DocType', d.options).fields;\n\t\t\t\t\t\treturn $.map(child_fields, function(df) {\n\t\t\t\t\t\t\treturn df.options == 'Phone' ||\n\t\t\t\t\t\t\t\t(df.options == 'User' && df.fieldtype == 'Link')\n\t\t\t\t\t\t\t\t? get_select_options(df, d.fieldname) : null;\n\t\t\t\t\t\t});\n\t\t\t\t\t// Add User and Email fields from parent into select dropdown\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn d.options == 'SMS' ||\n\t\t\t\t\t\t\t(d.options == 'User' && d.fieldtype == 'Link')\n\t\t\t\t\t\t\t? get_select_options(d) : null;\n\t\t\t\t\t}\n\t\t\t\t}); \n\t\t\t}\n\t\t\t// set email recipient options\n\t\t\tfrm.fields_dict.recipients.grid.update_docfield_property(\n\t\t\t\t'receiver_by_document_field',\n\t\t\t\t'options',\n\t\t\t\t[''].concat([\"owner\"]).concat(receiver_fields)\n\t\t\t);\n\t\t});\n\t},\n\tsetup_example_message: function(frm) {\n\t\tlet template = '';\n\t\tif (frm.doc.channel === 'Email') {\n\t\t\ttemplate = `<h5>Message Example</h5>\n\n<pre>&lt;h3&gt;Order Overdue&lt;/h3&gt;\n\n&lt;p&gt;Transaction {{ doc.name }} has exceeded Due Date. Please take necessary action.&lt;/p&gt;\n\n&lt;!-- show last comment --&gt;\n{% if comments %}\nLast comment: {{ comments[-1].comment }} by {{ comments[-1].by }}\n{% endif %}\n\n&lt;h4&gt;Details&lt;/h4&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Customer: {{ doc.customer }}\n&lt;li&gt;Amount: {{ doc.grand_total }}\n&lt;/ul&gt;\n</pre>\n\t\t\t`;\n\t\t} else if (in_list(['Slack', 'System Notification', 'SMS'], frm.doc.channel)) {\n\t\t\ttemplate = `<h5>Message Example</h5>\n\n<pre>Order Overdue\n\nTransaction {{ doc.name }} has exceeded Due Date. Please take necessary action.\n\n<!-- show last comment -->\n{% if comments %}\nLast comment: {{ comments[-1].comment }} by {{ comments[-1].by }}\n{% endif %}\n\nDetails\n\n\u2022 Customer: {{ doc.customer }}\n\u2022 Amount: {{ doc.grand_total }}\n</pre>`;\n\t\t}\n\t\tif (template) {\n\t\t\tfrm.set_df_property('message_examples', 'options', template);\n\t\t}\n\n\t}\n};\n\nfrappe.ui.form.on('Notification', {\n\tonload: function(frm) {\n\t\tfrm.set_query('document_type', function() {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\tistable: 0\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\tfrm.set_query('print_format', function() {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\tdoc_type: frm.doc.document_type\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n\trefresh: function(frm) {\n\t\tfrappe.notification.setup_fieldname_select(frm);\n\t\tfrappe.notification.setup_example_message(frm);\n\t\tfrm.get_field('is_standard').toggle(frappe.boot.developer_mode);\n\t\tfrm.trigger('event');\n\t},\n\tdocument_type: function(frm) {\n\t\tfrappe.notification.setup_fieldname_select(frm);\n\t},\n\tview_properties: function(frm) {\n\t\tfrappe.route_options = { doc_type: frm.doc.document_type };\n\t\tfrappe.set_route('Form', 'Customize Form');\n\t},\n\tevent: function(frm) {\n\t\tif (in_list(['Days Before', 'Days After'], frm.doc.event)) {\n\t\t\tfrm.add_custom_button(__('Get Alerts for Today'), function() {\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod:\n\t\t\t\t\t\t'frappe.email.doctype.notification.notification.get_documents_for_today',\n\t\t\t\t\targs: {\n\t\t\t\t\t\tnotification: frm.doc.name\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\tfrappe.msgprint(r.message);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfrappe.msgprint(__('No alerts for today'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n\tchannel: function(frm) {\n\t\tfrm.toggle_reqd('recipients', frm.doc.channel == 'Email');\n\t\tfrappe.notification.setup_fieldname_select(frm);\n\t\tfrappe.notification.setup_example_message(frm);\n\t\tif (frm.doc.channel === 'SMS' && frm.doc.__islocal) {\n\t\t\tfrm.set_df_property('channel',\n\t\t\t\t'description', `To use SMS Channel, initialize <a href=\"/app/sms-settings\">SMS Settings</a>.`);\n\t\t} else {\n\t\t\tfrm.set_df_property('channel', 'description', ` `);\n\t\t}\n\t}\n});\n\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2022-07-07 21:27:55.936830",
  "name": "Material Request-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Material Request\", {\n\n  setup: function (frm) {\n\n    frm.set_query(\"uom\", \"items\", function (doc, cdt, cdn) {\n\n      let row = locals[cdt][cdn];\n\n      return {\n\n        query:\n\n          \"erpnext.accounts.doctype.pricing_rule.pricing_rule.get_item_uoms\",\n\n        filters: {\n\n          value: row.item_code,\n\n          apply_on: \"Item Code\",\n\n        },\n\n      };\n\n    });\n\n  },\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 0,
  "modified": "2022-07-19 12:22:13.113301",
  "name": "Work Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Work Order', {\n\tvalidate: function(frm) {\n\t\tif(frm.doc.qty != [6]||[12] && frm.doc.production_item == 'C-CAK-VCT-1121') {\n            frappe.msgprint('You can not produce qty rather than multiples of 6');\n            frappe.validated = false;\n    \t}\n\t\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "POS Invoice",
  "enabled": 1,
  "modified": "2022-07-26 21:14:52.329030",
  "name": "POS Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"POS Invoice\", {\n\n  setup: function (frm) {\n\n    frm.set_query(\"uom\", \"items\", function (doc, cdt, cdn) {\n\n      let row = locals[cdt][cdn];\n\n      return {\n\n        query:\n\n          \"erpnext.accounts.doctype.pricing_rule.pricing_rule.get_item_uoms\",\n\n        filters: {\n\n          value: row.item_code,\n\n          apply_on: \"Item Code\",\n\n        },\n\n      };\n\n    });\n\n  },\n\n});\n\nfrappe.ui.form.on('POS Invoice Item', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 }
]